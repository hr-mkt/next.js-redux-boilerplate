{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// import * as SigninMiddleware from './SigninMiddleware'\nvar mws = {\n  // SigninMiddleware,\n  MWS: {\n    TICK_UPDATE: function () {\n      var _TICK_UPDATE = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(store, next, action) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                next({\n                  type: 'TICK',\n                  light: true,\n                  lastUpdate: Date.now()\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function TICK_UPDATE(_x, _x2, _x3) {\n        return _TICK_UPDATE.apply(this, arguments);\n      }\n\n      return TICK_UPDATE;\n    }()\n  }\n};\n\nvar getMiddleware = function getMiddleware(action) {\n  for (var middleware in mws) {\n    if (mws[middleware][action]) {\n      return mws[middleware][action];\n    }\n  }\n\n  return null;\n};\n\nexport var middlewares = function middlewares(store) {\n  return function (next) {\n    return function (action) {\n      var middleware = getMiddleware(action.type);\n\n      if (!middleware) {\n        return next(action);\n      }\n\n      return middleware(store, next, action);\n    };\n  };\n};","map":null,"metadata":{},"sourceType":"module"}