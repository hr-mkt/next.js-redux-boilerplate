{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { middlewares } from '../middlewares';\nimport rootReducer from '../reducers';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport path from 'path';\nexport const configureStore = preloadedState => {\n  const store = createStore(rootReducer, preloadedState, compose(applyMiddleware(thunk, middlewares), devToolsEnhancer()));\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      store.replaceReducer(rootReducer);\n    });\n  }\n\n  return store;\n};\nexport const preloadedState = {\n  app: {\n    sideBar: false,\n    page: 'reservation'\n  }\n};","map":null,"metadata":{},"sourceType":"module"}